//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан инструментальным средством
//     В случае повторного создания кода изменения, внесенные в этот файл, будут потеряны.
// </auto-generated>
//------------------------------------------------------------------------------
namespace PreyPreadtor
{
	using System;
	using System.Collections.Generic;
	using System.Drawing;
	using System.Linq;
	using System.Text;

	/// <summary>
	/// хищник
	/// </summary>
	public sealed class Predator : Agent
	{
        /// <summary>
        /// новорожденный хищник
        /// </summary>
        const int satietyBorn = 40;
        
        /// <summary>
        /// радиус зрения
        /// </summary>
        const double radius = 2.4;

        /// <summary>
        /// время жизни
        /// </summary>
        const int maxAge = 200;

        /// <summary>
        /// возраст размножения
        /// </summary>
        const int bornAge = 100;

        /// <summary>
        /// затраты на рождение
        /// </summary>
        const int bornExpense = 40;

        /// <summary>
        /// порог голода для охоты
        /// </summary>
        const int hunterBound = 90;


        /// <summary>
        /// порог голода для размножения (должен меньше чем охота)
        /// </summary>
        const int bornBound = 70;


        public Predator(Environment environment)
            : base(environment, satietyBorn, Color.Gray)
        {
        }

		public void Behaviour()
		{
            var nearAg = nearAgents(radius);
            if (satiety < hunterBound && nearAg.Count > 0) //находим еду
                {
                    foreach (var ag in nearAg)
                        if ((ag is Prey))
                        {
                            MoveTo(ag.x, ag.y);
                            Eat(ag);
                            return;
                        }
                }
                MoveRand();


                int age = environment.timer - birth; //возраст

                //смерть от голода или возраста
                if (satiety < 0 || age > maxAge)
                {
                    environment.agents.Remove(this);
                }

                //размножение
                if (satiety > bornBound && age > bornAge)
                {
                    var ag = new Predator(environment);
                    ag.x = x;
                    ag.y = y;
                    environment.agents.Add(ag);
                    satiety -= bornExpense;
                }

		}


        

	}
}

